services:
  init:
    image: alpine:latest
    volumes:
      - ./src:/src
    entrypoint: ["/bin/sh", "-c"]
    command:
      - >
        if [ ! -f "/src/wp-load.php" ]; then
          echo "Downloading latest WordPress...";
          apk add --no-cache curl tar;
          curl -o latest.tar.gz https://wordpress.org/latest.tar.gz;
          tar -xzf latest.tar.gz --strip-components=1 -C /src;
          rm latest.tar.gz;
          chown -R 1000:1000 /src;
        else
          echo "WordPress already installed.";
        fi
    restart: "no"

  nginx:
    build:
      context: nginx
    ports:
      - "80:80"
    volumes:
      - ./src:/src
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/fastcgi_params.conf:/etc/nginx/fastcgi_params.conf
      - ./logs:/var/log/nginx
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    depends_on:
      - php
    networks:
      - dockerpress-network

  php:
    build:
      context: php
      args:
        DEBIAN_MIRROR_DOMAIN: deb.debian.org
        PHP_EXTENSIONS: pdo_mysql mysqli fileinfo gd curl opcache sockets redis imagick intl zip bcmath exif
        TZ: UTC
    volumes:
      - ./src:/src
      - ./php/php.ini:/usr/local/etc/php/php.ini
      - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./logs:/var/log/php
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    cap_add:
      - SYS_PTRACE
    networks:
      - dockerpress-network

  mysql:
    image: mysql:8.0.36
    expose:
      - "3306"
    volumes:
      - ./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql-data:/var/lib/mysql/
      - ./logs:/var/log/mysql/
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: wordpress
      TZ: UTC
    networks:
      - dockerpress-network

networks:
  dockerpress-network:
    driver: bridge
